// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/DEHbNO4b/metrics/internal/interfaces (interfaces: MetricsStorage)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	data "github.com/DEHbNO4b/metrics/internal/data"
	gomock "github.com/golang/mock/gomock"
)

// MockMetricsStorage is a mock of MetricsStorage interface.
type MockMetricsStorage struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsStorageMockRecorder
}

// MockMetricsStorageMockRecorder is the mock recorder for MockMetricsStorage.
type MockMetricsStorageMockRecorder struct {
	mock *MockMetricsStorage
}

// NewMockMetricsStorage creates a new mock instance.
func NewMockMetricsStorage(ctrl *gomock.Controller) *MockMetricsStorage {
	mock := &MockMetricsStorage{ctrl: ctrl}
	mock.recorder = &MockMetricsStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsStorage) EXPECT() *MockMetricsStorageMockRecorder {
	return m.recorder
}

// GetMetric mocks base method.
func (m *MockMetricsStorage) GetMetric(arg0 data.Metrics) (data.Metrics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetric", arg0)
	ret0, _ := ret[0].(data.Metrics)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMetric indicates an expected call of GetMetric.
func (mr *MockMetricsStorageMockRecorder) GetMetric(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetric", reflect.TypeOf((*MockMetricsStorage)(nil).GetMetric), arg0)
}

// GetMetrics mocks base method.
func (m *MockMetricsStorage) GetMetrics() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetrics")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetMetrics indicates an expected call of GetMetrics.
func (mr *MockMetricsStorageMockRecorder) GetMetrics() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetrics", reflect.TypeOf((*MockMetricsStorage)(nil).GetMetrics))
}

// SetMetric mocks base method.
func (m *MockMetricsStorage) SetMetric(arg0 data.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetMetric", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetMetric indicates an expected call of SetMetric.
func (mr *MockMetricsStorageMockRecorder) SetMetric(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMetric", reflect.TypeOf((*MockMetricsStorage)(nil).SetMetric), arg0)
}
